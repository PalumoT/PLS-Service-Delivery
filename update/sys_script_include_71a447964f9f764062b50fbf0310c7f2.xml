<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_novrp_pls.sr_helper</api_name>
        <client_callable>true</client_callable>
        <description/>
        <name>sr_helper</name>
        <script><![CDATA[var sr_helper = Class.create();
sr_helper.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	getFieldsFromDemand: function(){
		var demand = this.getParameter("sysparm_demand");
		var glideDemand = new GlideRecord("x_novrp_pls_demand");

		if(!glideDemand.get(demand)){
			return "";
		}

		var json = new global.JSON();
		var response = {
			"start_date": glideDemand.getValue("requested_start_date"),
			"end_date": glideDemand.getValue("requested_end_date"),
			"requester": glideDemand.getValue("requester"),
			"franchise": glideDemand.getValue("franchise"),
			"brand": glideDemand.getValue("brand")
		};

		return json.encode(response);
	},
	
	filterCatalogItems: function(serviceRequest){
		var encodedQuery = "active=true^sys_class_name=" +
			gs.getProperty("x_novrp_pls.ref_catalog_item");
		
		var demand = serviceRequest.top_task.getRefRecord();
		
		if(demand != ""){
			if(demand.services_requested != ""){
				encodedQuery += "^parentIN" + demand.services_requested;
			}else if(demand.service_groups != ""){
				encodedQuery += "^parent.parentIN" + demand.service_groups;
			}	
		}
		
		var result = "sys_idIN";
		
		var glideDemand = new GlideRecord("x_novrp_pls_catalog_item");
		glideDemand.addEncodedQuery(encodedQuery);
		glideDemand.query();
		
		while(glideDemand.next()){	
			result += glideDemand.getUniqueValue() + ",";
		}
		
		return result;
	},
	
	getEncodedFilter:function(){
		var encodedQuery = "";
		
		if(gs.getUser().hasRole("x_novrp_pls.demand_user") &&
		   !gs.getUser().hasRole("x_novrp_pls.demand_manager") ){
			encodedQuery = "sn_brm_caller_name=" + gs.getUserID() + "^NQdemand_owner=" + gs.getUserID();
		}

		if(gs.getUser().hasRole("x_novrp_pls.service_request_user")){
			if(encodedQuery != ""){
				encodedQuery += "^NQ";
			}
			encodedQuery += "service_request_ownersLIKE" + gs.getUserID();
		}

		return encodedQuery;
	},
	
	getRegion: function(){
		gs.info("Get region for country " + this.getParameter("sysparm_country") + " and region " + 
			   this.getParameter("sysparm_business_unit"));
		
		var glideRegion = new GlideRecord("x_novrp_pls_mapping_region");
		glideRegion.addQuery("country", this.getParameter("sysparm_country"));
		glideRegion.addQuery("business_unit", this.getParameter("sysparm_business_unit"));
		glideRegion.query();
		
		if(glideRegion.next()){
			gs.info("found " + glideRegion.getDisplayValue());
			return glideRegion.getValue("region");
		}
		
		return "NULL";
	},
											  
    type: 'sr_helper'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>paul.galmot</sys_created_by>
        <sys_created_on>2017-06-14 09:32:17</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>71a447964f9f764062b50fbf0310c7f2</sys_id>
        <sys_mod_count>47</sys_mod_count>
        <sys_name>sr_helper</sys_name>
        <sys_package display_value="Novartis  PLS Service Delivery Management" source="x_novrp_pls">00c705cf4f9a724462b50fbf0310c7ad</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Novartis  PLS Service Delivery Management">00c705cf4f9a724462b50fbf0310c7ad</sys_scope>
        <sys_update_name>sys_script_include_71a447964f9f764062b50fbf0310c7f2</sys_update_name>
        <sys_updated_by>GALMOPA1</sys_updated_by>
        <sys_updated_on>2017-06-22 15:07:20</sys_updated_on>
    </sys_script_include>
</record_update>
