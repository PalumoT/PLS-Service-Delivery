<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>generate_resource_plan</action_name>
        <active>true</active>
        <client>true</client>
        <comments/>
        <condition>!current.catalog_item.nil() &amp;&amp; current.state == 1;</condition>
        <form_action>true</form_action>
        <form_button>false</form_button>
        <form_context_menu>false</form_context_menu>
        <form_link>true</form_link>
        <hint/>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <name>Generate Resource Plan</name>
        <onclick>generateResourcePlan()</onclick>
        <order>100</order>
        <script><![CDATA[//Client-side 'onclick' function
function generateResourcePlan(){
	var answer = true;
	
	if(!g_form.getValue("planned_start_date")){
		answer = false;
		g_form.showFieldMsg("planned_start_date", "Mandatory field", 'error');
	}
	
	if(!g_form.getValue("planned_end_date")){
		answer = false;
		g_form.showFieldMsg("planned_end_date", "Mandatory field", 'error');
	}
	
	if(!g_form.getValue("estimated_efforts_hours")){
		answer = false;
		g_form.showFieldMsg("estimated_efforts_hours", "Mandatory field", 'error');
	}
	
	if(!answer){
		return false;
	}
	
	//Call the UI Action and skip the 'onclick' function
	gsftSubmit(null, g_form.getFormElement(), 'generate_resource_plan'); //MUST call the 'Action name' set in this UI Action
}

//Code that runs without 'onclick'
//Ensure call to server-side function with no browser errors
if(typeof window == 'undefined'){
	runBusRuleCode();
}

//Server-side function
function runBusRuleCode(){
	var cost = 0;
	var deliverable = current.catalog_item;
	var tasks = getTasks("catalog_item=" + deliverable);
	var message = "";
	
	deleteResourcePlan(current);
	
	if(tasks.length == 0){
		gs.addInfoMessage("No milestone defined for the selected subservice");
	}
	
	for(var i=0; i<tasks.length; i++){
		var task = tasks[i];
		var plan = createResourcePlan(task, current);
	}
	
	current.update();
	
	action.setRedirectURL(current);
}

function deleteResourcePlan(task){
	var glideResourcePlan = new GlideRecord("x_novrp_pls_resource_plan");
	glideResourcePlan.addQuery("task", task.getUniqueValue());
	glideResourcePlan.deleteMultiple();	
}

function createResourcePlan(task, parent){
	if(!task.group){
		gs.addInfoMessage("Assignment group is missing in the task configuration for milestone " + task.stage);
		return;
	}
	
	var glideResourcePlan = new GlideRecord("x_novrp_pls_resource_plan");
	glideResourcePlan.addQuery("group_resource", task.group);
	glideResourcePlan.addQuery("task", parent.getUniqueValue());
	glideResourcePlan.addQuery("short_description", task.stage);
	glideResourcePlan.query();
	
	if(glideResourcePlan.next()){	
		glideResourcePlan.planned_hours += parseFloat(task.hours);
		glideResourcePlan.update();
		
		return glideResourcePlan;
	}
	
	glideResourcePlan.newRecord();
	glideResourcePlan.short_description = task.stage;
	glideResourcePlan.group_resource = task.group;
	glideResourcePlan.planned_hours = task.hours;
	glideResourcePlan.members_preference = 3;
	glideResourcePlan.task = current.getUniqueValue();
	glideResourcePlan.insert();
	
	return glideResourcePlan;
}

function getTasks(encodedQuery){
	var tasks = [];
	var total = 0;
	
	var glideTask = new GlideRecord("x_novrp_pls_catalog_item_task");
	glideTask.addEncodedQuery(encodedQuery);
	glideTask.orderBy("order");
	glideTask.query();

	while(glideTask.next()){
		if(glideTask.getValue("subtasks") > 0){
			var subtasks = getSubtasks(glideTask);
			for(var i=0; i<subtasks.length; i++){
				var subtask = subtasks[i];
				tasks.push({
					"stage": glideTask.getValue("order") + " - " +
					glideTask.getValue("short_description"),
					"group": subtask.group, 
					"hours": subtask.hours, 
				});
			}
		}else{
			tasks.push({
				"stage": glideTask.getValue("order") + " - " +
					glideTask.getValue("short_description"),
				
				"group": glideTask.getValue("assignment_group"), 
				"hours": glideTask.getValue("estimated_effort_hours") 
			});
		}
	}
	
	return tasks;
}

function getSubtasks(task){
	var result = [];
	var glideTask = new GlideRecord("x_novrp_pls_catalog_item_task");
	glideTask.addQuery("top_task", task.getUniqueValue());
	glideTask.orderBy("order");
	glideTask.query();
	
	while(glideTask.next()){
		if(glideTask.getValue("subtasks") > 0){
			var subtasks = getSubtasks(glideTask);
			result = result.concat(subtasks);
		}else{
			result.push({
				"group": glideTask.getValue("assignment_group"),
				"hours": glideTask.getValue("estimated_efforts_hours")
			});
		}
	}
	
	return result;
}]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>paul.galmot</sys_created_by>
        <sys_created_on>2017-05-09 15:12:14</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>76397e3e4f6ef600b734260f0310c717</sys_id>
        <sys_mod_count>151</sys_mod_count>
        <sys_name>Generate Resource Plan</sys_name>
        <sys_overrides/>
        <sys_package display_value="Novartis  PLS Service Delivery Management" source="x_novrp_pls">00c705cf4f9a724462b50fbf0310c7ad</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Novartis  PLS Service Delivery Management">00c705cf4f9a724462b50fbf0310c7ad</sys_scope>
        <sys_update_name>sys_ui_action_76397e3e4f6ef600b734260f0310c717</sys_update_name>
        <sys_updated_by>GALMOPA1</sys_updated_by>
        <sys_updated_on>2017-06-22 23:41:52</sys_updated_on>
        <table>x_novrp_pls_service_request</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
