<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_novrp_pls_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NVS - Get Info From Deliverable</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var deliverable = current.deliverable;
	
	setParents();
	setUnitPrice();
	setHours();
	
	function setHours(){
		var glideTask = new GlideAggregate("x_novrp_pls_task_configuration");
		glideTask.addQuery("deliverable", current.deliverable);
		glideTask.addAggregate("SUM", "estimated_efforts_hours");
		glideTask.setGroup(false);
		glideTask.query();
		
		if(!glideTask.hasNext()){
			current.estimated_efforts_hours = "";
		}
		
		if(glideTask.next()){
			current.estimated_efforts_hours = parseFloat(glideTask.getAggregate("SUM", "estimated_efforts_hours"));
		}
	}
	
	function setUnitPrice(){
		var glidePrice = new GlideRecord("x_novrp_pls_deliverable_price");
		glidePrice.addQuery("valid_from", "<=", new GlideDate());
		glidePrice.addQuery("valid_to", ">=", new GlideDate());
		glidePrice.addQuery("deliverable", deliverable);
		glidePrice.query();
		
		if(!glidePrice.next()){
			current.estimated_price = "";
		}
		
		current.estimated_price = glidePrice.getDisplayValue("currency") + ";" + glidePrice.getValue("price");
	}
	
	function setParents(){
		if(current.deliverable.nil()){
			current.service = "";
			current.service_group = "";
			current.practice = "";
			return;
		}
		
		var service = deliverable.parent;
		current.service = service;
		
		if(!service){
			return;
		}
		
		var serviceGroup = service.parent;
		current.service_group = serviceGroup;
		
		if(!serviceGroup){
			return;
		}
		
		current.practice = serviceGroup.parent;
	}	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>paul.galmot</sys_created_by>
        <sys_created_on>2017-05-09 08:16:01</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>75f85d364fa6f600b734260f0310c74a</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_name>NVS - Get Info From Deliverable</sys_name>
        <sys_overrides/>
        <sys_package display_value="Novartis  PLS Service Delivery Management" source="x_novrp_pls">00c705cf4f9a724462b50fbf0310c7ad</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Novartis  PLS Service Delivery Management">00c705cf4f9a724462b50fbf0310c7ad</sys_scope>
        <sys_update_name>sys_script_75f85d364fa6f600b734260f0310c74a</sys_update_name>
        <sys_updated_by>paul.galmot</sys_updated_by>
        <sys_updated_on>2017-06-01 10:31:19</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=75f85d364fa6f600b734260f0310c74a"/>
</record_update>
