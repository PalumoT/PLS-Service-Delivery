<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_novrp_pls_service_request</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_novrp_pls_service_request">top_taskISNOTEMPTY^estimated_efforts_hoursVALCHANGES^ORplanned_start_dateVALCHANGES^ORplanned_end_dateVALCHANGES^ORestimated_cost_dollarsVALCHANGES^ORresource_plan_costVALCHANGESjavascript:global.getCurrencyFilter('x_novrp_pls_service_request','resource_plan_cost', 'USD;USD')^ORpercent_completeVALCHANGES^state=1^EQ<item endquery="false" field="top_task" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="estimated_efforts_hours" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="planned_start_date" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="planned_end_date" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="estimated_cost_dollars" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="resource_plan_cost" goto="false" newquery="false" operator="VALCHANGES" or="true" value="javascript:global.getCurrencyFilter('x_novrp_pls_service_request','resource_plan_cost', 'USD;USD')"/>
            <item endquery="false" field="percent_complete" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="1"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>NVS - Update Parent Estimated</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {
	var glideTopTask = current.top_task.getRefRecord();
	glideTopTask.planned_start_date = getEarliestStartDate(current.top_task);
	glideTopTask.planned_end_date = getLatestEndDate(current.top_task);
	
	var aggregate = getAggregatedValue(glideTopTask.getUniqueValue());
	glideTopTask.estimated_efforts_hours = aggregate.estimated_efforts_hours;
	glideTopTask.estimated_cost_dollars = aggregate.estimated_cost_dollars;
	glideTopTask.update();
	
	function getAggregatedValue(topTask){
		if(!topTask){
			return 0;
		}
		
		var aggregate = {
			estimated_efforts_hours: 0,
			actual_efforts_hours: 0,
			resource_plan_cost: 0,
			estimated_cost_dollars: 0
		};
		
		var glideTask = new GlideAggregate("x_novrp_pls_task");
		glideTask.addQuery("top_task", topTask);
		glideTask.addQuery("state", "!=", "6");
		glideTask.addAggregate("SUM", "estimated_efforts_hours");
		glideTask.addAggregate("SUM", "actual_efforts_hours");
		glideTask.addAggregate("SUM", "resource_plan_cost");
		glideTask.addAggregate("SUM", "estimated_cost_dollars");
		glideTask.setGroup(false);
		glideTask.query();
		
		if(glideTask.next()){
			aggregate.estimated_efforts_hours = glideTask.getAggregate("SUM", "estimated_efforts_hours");
			aggregate.actual_efforts_hours = glideTask.getAggregate("SUM", "actual_efforts_hours");
			aggregate.resource_plan_cost = glideTask.getAggregate("SUM", "resource_plan_cost");
			aggregate.estimated_cost_dollars = glideTask.getAggregate("SUM", "estimated_cost_dollars");
		}
		
		return aggregate;
	}
	
	function getEarliestStartDate(topTask){
		if(!topTask){
			return "";
		}
		
		var glideTask = new GlideRecord("x_novrp_pls_task");
		glideTask.addQuery("top_task", topTask);
		glideTask.addQuery("state", "!=", "6");
		glideTask.orderBy("planned_start_date");
		glideTask.query();
		
		if(glideTask.next()){
			return glideTask.getValue("planned_start_date");
		}
		
		return "";
	}
	
	function getLatestEndDate(topTask){
		if(!topTask){
			return "";
		}
		
		var glideTask = new GlideRecord("x_novrp_pls_task");
		glideTask.addQuery("top_task", topTask);
		glideTask.addQuery("state", "!=", "6");
		glideTask.orderByDesc("planned_end_date");
		glideTask.query();
		
		if(glideTask.next()){
			return glideTask.getValue("planned_end_date");
		}
		
		return "";
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>paul.galmot</sys_created_by>
        <sys_created_on>2017-06-01 10:06:09</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1e8e44564f0b72003fb88e401310c77c</sys_id>
        <sys_mod_count>38</sys_mod_count>
        <sys_name>NVS - Update Parent Estimated</sys_name>
        <sys_overrides/>
        <sys_package display_value="Novartis  PLS Service Delivery Management" source="x_novrp_pls">00c705cf4f9a724462b50fbf0310c7ad</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Novartis  PLS Service Delivery Management">00c705cf4f9a724462b50fbf0310c7ad</sys_scope>
        <sys_update_name>sys_script_1e8e44564f0b72003fb88e401310c77c</sys_update_name>
        <sys_updated_by>GALMOPA1</sys_updated_by>
        <sys_updated_on>2017-06-16 09:33:06</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=1e8e44564f0b72003fb88e401310c77c"/>
</record_update>
