<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_novrp_pls_service_request</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_novrp_pls_service_request">catalog_itemVALCHANGES^EQ<item endquery="false" field="catalog_item" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>NVS - Calculate Estimated Price</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var subservice = current.catalog_item;
	
	if(subservice.nil()){
		current.estimated_cost_dollars = 0;
		return;
	}
	
	var priceType = subservice.pricing_type;
	
	if(priceType == "standard"){
		current.estimated_cost_dollars = getPrice(subservice);
	}else if(priceType == "fte"){
		
	}
	
	function getPrice(subservice){
		var now = new GlideDate();
		var glidePrice = new GlideRecord("x_novrp_pls_catalog_item_price");
		glidePrice.addQuery("catalog_item", subservice.sys_id);
		glidePrice.addQuery("valid_from", "<=", now);
		glidePrice.addQuery("valid_to", ">=", now);
		glidePrice.query();
		
		if(!glidePrice.next()){
			gs.addErrorMessage("No price for the current period");
			return "";
		}
		
		return glidePrice.getValue("price_usd");
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>paul.galmot</sys_created_by>
        <sys_created_on>2017-06-06 13:47:50</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>bf807a3b4fc37a003fb88e401310c7ed</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>NVS - Calculate Estimated Price</sys_name>
        <sys_overrides/>
        <sys_package display_value="Novartis  PLS Service Delivery Management" source="x_novrp_pls">00c705cf4f9a724462b50fbf0310c7ad</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Novartis  PLS Service Delivery Management">00c705cf4f9a724462b50fbf0310c7ad</sys_scope>
        <sys_update_name>sys_script_bf807a3b4fc37a003fb88e401310c7ed</sys_update_name>
        <sys_updated_by>paul.galmot</sys_updated_by>
        <sys_updated_on>2017-06-06 13:54:07</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=bf807a3b4fc37a003fb88e401310c7ed"/>
</record_update>
